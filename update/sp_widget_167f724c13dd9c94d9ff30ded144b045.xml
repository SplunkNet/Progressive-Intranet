<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function(spUtil,$scope,$timeout, spModal, $sce) {
  /* widget controller */
  var c = this;
	
	c.formatted_content_1 = $sce.trustAsHtml(c.data.tabbed_content_1);
	c.formatted_content_2 = $sce.trustAsHtml(c.data.tabbed_content_2);
	c.formatted_content_3 = $sce.trustAsHtml(c.data.tabbed_content_3);

	
	c.selectAg = function(record){
		
		//Set a property on the data object to identify the selected object
		c.data.selectedAg = record.agValue;
		spModal.open({
				size: "lg",
				title: record.agName,
				widget: 'iv2_attachment_clone',
				shared: c.data
			});
		
		//Send the data object to the server script
		c.server.update();
	}
	
	c.sortOrder=false;
	
	c.changeSortCol=function(key){
		
		if(key == c.orderCol)
			c.sortOrder = !c.sortOrder;
		else
			c.sortOrder = false;
		
		c.orderCol = key;
	}
	
	c.updatedFromServer = false;
	
	//Record watch functionality
	//a flag to indicate if a live update has been triggered by the record watcher
	spUtil.recordWatch($scope, c.data.table, '', function(updateObj)
	{
		spUtil.update($scope);
		c.updatedFromServer = true;
		if (!c.updatedRegs){
			c.updatedRegs = {};
		}
	
	c.updateRegs[updateObj.data.sys_id] = true;
	$timeout(function(){
					 c.updatedRegs[updateObj.data.sys_id] = false;
					 }, 6000);
	});
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>autoli {
 color: black;
  background-color: white;
  border-style: solid;
  
}

.list-group{
    max-height: 328px;
    margin-bottom: 10px;
    overflow:auto;
    -webkit-overflow-scrolling: touch;
}


#table-summary {
  text-align: center;
  font-family: 'Montserrat', Impact, Charcoal, sans-serif;
  background-color: white;
  color: #0093c9;
	letter-spacing:2px;
  font-size: 20px;
  font-weight: 100;
}

#li-heading:hover {
  background-color: #bde1ef;
  color: black;
}

form {
  //margin: 0;
  //padding: 20 0 0 0;
  animation-name: fadeIn;
  animation-duration: 1s;
}

form:hover {
 	transform: translateY(-3px); 
  box-shadow: 0 10px 20px rgba(0, 0, 0, .50);
}

@keyframes fadeIn{
  0% {
   opacity: 0;
  }
 100% {
   opacity: 1;
  }
}

a {
  color: black; 
  display:block;
  width: 100%;
}

#li-heading {
 padding: 16px; 
}

body {font-family: Arial;}

/* Style the tab */
.tab {
  overflow: hidden;
  border: 1px solid #ccc;
  background-color: #f1f1f1;
}

/* Style the buttons inside the tab */
.tab button {
  background-color: inherit;
  float: left;
  border: none;
  outline: none;
  cursor: pointer;
  padding: 14px 16px;
  transition: 0.3s;
  font-size: 17px;
}

/* Change background color of buttons on hover */
.tab button:hover {
  background-color: #ddd;
}

/* Create an active/current tablink class */
.tab button.active {
  background-color: #ccc;
}

/* Style the tab content */
.tabcontent {
  display: none;
  padding: 6px 12px;
  border: 1px solid #ccc;
  border-top: none;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>3_tabbed_content</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>3 tabbed content</name>
        <option_schema>[{"name":"title","section":"Presentation","default_value":"Content","label":"Title","type":"string"},{"hint":"tab1,tab2,tab3","name":"three_labels","section":"Presentation","default_value":"tab1,tab2,tab3","label":"3 labels","type":"string"},{"name":"content_page","section":"Data","default_value":"94450df0137c9090ce8b7d576144b02d","label":"Content Page","type":"string"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	/* populate the 'data' object */
	/* e.g., data.table = $sp.getValue('table'); */

	var tabs = options.three_labels;

	var splittabs = tabs.split(',');

	data.tab1 = splittabs[0];
	data.tab2 = splittabs[1];
	data.tab3 = splittabs[2];

	if(!input){

		var content_page = options.content_page;
		var content1 = '';
		var content2 = '';
		var content3 = '';
		var gr = new GlideRecord('u_service_portal_intranet');

		gr.get(content_page);



		content1 = gr.x_prole_intranet_tabbed_content_1.getDisplayValue();
		content2 = gr.x_prole_intranet_tabbed_content_2.getDisplayValue();
		content3 = gr.x_prole_intranet_tabbed_content_3.getDisplayValue();

		data.tabbed_content_1 = content1
		data.tabbed_content_2 = content2
		data.tabbed_content_3 = content3

	}
	//console.log(data);

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>derek.young</sys_created_by>
        <sys_created_on>2020-06-05 00:24:39</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>167f724c13dd9c94d9ff30ded144b045</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>3 tabbed content</sys_name>
        <sys_package display_value="Progressive Intranet" source="x_prole_intranet">5db0a1d91363bf80d9ff30ded144b0b4</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Progressive Intranet">5db0a1d91363bf80d9ff30ded144b0b4</sys_scope>
        <sys_update_name>sp_widget_167f724c13dd9c94d9ff30ded144b045</sys_update_name>
        <sys_updated_by>derek.young</sys_updated_by>
        <sys_updated_on>2020-06-08 06:02:43</sys_updated_on>
        <template><![CDATA[<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet'>
<form>
  <div class="panel panel-default">
    <div id="table-summary" class="panel-heading">
      <span class="fa fa-bolt" ng-show="c.updatedFromServer"></span><b>{{c.options.title}}</b>
    </div>
    <div class="tab">
  <button class="tablinks active btn btn-outline-primary" onclick="openCity(event, 'tab1')">{{c.data.tab1}}</button>
  <button class="tablinks btn btn-outline-primary" onclick="openCity(event, 'tab2')">{{c.data.tab2}}</button>
  <button class="tablinks btn btn-outline-primary" onclick="openCity(event, 'tab3')">{{c.data.tab3}}</button>
</div>

<div id="tab1" class="tabcontent" style="display:block" >
   <div class="card-body">
          <div ng-bind-html="c.formatted_content_1"></div>
          </div>
</div>

<div id="tab2" class="tabcontent">
  <div class="card-body">
           <div ng-bind-html="c.formatted_content_2"></div>
          </div>
</div>

<div id="tab3" class="tabcontent">
  <div class="card-body">
          <div ng-bind-html="c.formatted_content_3"></div>
          </div>
</div>

<script>
function openCity(evt, cityName) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(cityName).style.display = "block";
  evt.currentTarget.className += " active";
}
</script>
  </div>
</form>]]></template>
    </sp_widget>
</record_update>
